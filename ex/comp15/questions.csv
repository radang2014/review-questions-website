Id,Question,Type,Image,Option 1,Image 1,Option 2,Image 2,Option 3,Image 3,Option 4,Image 4,Option 5,Image 5,Option 6,Image 6,Option 7,Image 7,Option 8,Image 8,Option 9,Image 9,Option 10,Image 10,Option 11,Image 11,Option 12,Image 12,Option 13,Image 13,Option 14,Image 14,Option 15,Image 15,Correct Answer
1,"Which sorting algorithm is usually \(O(n \log n)\) time, but is \(O(n^2)\) in the worst case scenario?",MC,,Heap Sort,,Quick Sort,,Selection Sort,,Radix Sort,,Merge Sort,,Insertion Sort,,Shell Sort,,Bucket/Counting Sort,,Bubble Sort,,,,,,,,,,,,,,2
2,One of the worst case scenarios in the above sort occurs when the list is...,MC,,in a random order.,,already sorted.,,bounded in range.,,,,,,,,,,,,,,,,,,,,,,,,,,2
3,The worst case scenario that is the answer to question 2 is the best case scenario for which other sorting method?,MC,,Heap Sort,,Quick Sort,,Selection Sort,,Radix Sort,,Merge Sort,,Insertion Sort,,Shell Sort,,Bucket/Counting Sort,,,,,,,,,,,,,,,,6
4,Selection sort is _____; insertion sort is _____.,MC,,"stable, stable",,"stable, unstable",,"unstable, stable",,"unstable, unstable",,,,,,,,,,,,,,,,,,,,,,,,3
5,"The graph traversal algorithms discussed in class have data structures that may be helpful for implementation of finding the ""next"" vertex to investigate. Particularly, a _____ would be helpful for BFS, a _____ would be helpful for DFS, and a _____ would be helpful for Dijkstra's Algorithm.",MC,,"stack, queue, heap",,"stack, heap, queue",,"queue, stack, heap",,"queue, heap, stack",,"heap, queue, stack",,"heap, stack, queue",,,,,,,,,,,,,,,,,,,,3
6,The best runtime one can achieve with comparison based sorts is...,MC,,\(O(n^2)\),,\(O(n \log n)\),,\(O(n)\),,\(O(\log n)\),,\(O(1)\),,,,,,,,,,,,,,,,,,,,,,2
7,"When inserting/removing from a heap, which invariant is (re)established first?",MC,,Shape property,,Heap property,,BST invariants,,,,,,,,,,,,,,,,,,,,,,,,,,1
8,Let \(i\) be the index of the array representing the location of the current Node in the heap. Where is the right child?,MC,,\(\frac{i}{2}\),,\(i+1\),,\(i+2\),,\(2i-1\),,\(2i\),,\(2i+1\),,\(2i+2\),,,,,,,,,,,,,,,,,,6
9,What is the space complexity of radix sort (including the space required to store the list to sort)?,MC,,\(O(num\_digits)\),,\(O(n+num\_digits)\),,\(O(n*num\_digits)\),,\(O(range\_size)\),,\(O(n+range\_size)\),,\(O(n*range\_size)\),,\(O(base)\),,\(O(n+base)\),,\(O(n*base)\),,\(O(n*(base+num\_digits))\),,\(O(n+(base*num\_digits))\),,\(O(num\_digits*(n+base))\),,\(O(num\_digits+(n*base))\),,\(O(metro\_sim)\),,,,8
10,"The runtime for BFS and DFS is _____ if edges are represented in an adjacency list, and _____ if edges are represented in an adjacency matrix.",MC,,"\(O(|V|)\), \(O(|V|)\)",,"\(O(|V|^2)\), \(O(|V|^2)\)",,"\(O(|V|^2)\), \(O(|V|^3)\)",,"\(O(|V|+|E|)\), \(O(|V|*|E|)\)",,"\(O(|V|^2)\), \(O(|V|+|E|)\)",,"\(O(|V|^2)\), \(O(|V|*|E|)\)",,"\(O(|V|*|E|)\), \(O(|V|^2)\)",,"\(O(|V|+|E|)\), \(O(|V|^2)\)",,,,,,,,,,,,,,,,8
11,What is the time complexity of accessing the minimum element in a min-heap?,MC,,\(O(1)\),,\(O(n)\),,\(O(\log n)\),,\(O(n \log n)\),,\(O(n^2)\),,,,,,,,,,,,,,,,,,,,,,1
12,True or False: A hash function is deterministic.,MC,,TRUE,,FALSE,,,,,,,,,,,,,,,,,,,,,,,,,,,,1
13,Is this an AVL tree?,MC,AVL tree example.PNG,Yes,,"No, the left subtree of 7 is heavier than the right subtree of 7",,"No, the left child of 7 has a larger height than the right child of 7",,"No, it violates an AVL tree invariant not described in the other options",,,,,,,,,,,,,,,,,,,,,,,,4
14,Is the empty tree an AVL tree?,MC,,Yes,,"No, because it is not a BST",,"No, because it is not balanced",,"No, because it is empty",,,,,,,,,,,,,,,,,,,,,,,,1
15,"You insert the following elements into a BST in this order: 5, 9, 7. What do you have to do to balance it?",MC,,Nothing!,,Left rotation,,Right rotation,,"Left rotation, then a right rotation",,"Right rotation, then a left rotation",,,,,,,,,,,,,,,,,,,,,,5
16,What is the time complexity of rebalancing an unbalanced AVL tree (tree became unbalanced after insertion or removal)?,MC,,\(O(1)\),,\(O(\log n)\),,\(O(n)\),,\(O(n \log n)\),,\(O(n^2)\),,,,,,,,,,,,,,,,,,,,,,1
17,What data structure gives you constant access to each item in that structure?,MC,,ArrayList,,LinkedList,,Binary Search Tree,,AVL Tree,,,,,,,,,,,,,,,,,,,,,,,,1
18,Where does Dijkstra's Algorithm fail?,MC,,When trying to find the shortest unweighted path,,When trying to find the shortest weighted path,,When trying to find the most cost efficient path in a graph with a negative cycle,,,,,,,,,,,,,,,,,,,,,,,,,,3
19,True or False: A binary search tree guarantees you logarithmic access to every element.,MC,,TRUE,,FALSE,,,,,,,,,,,,,,,,,,,,,,,,,,,,2
20,Which sorting algorithm is ideal for when all elements are within a bounded range (and the range size is small)?,MC,,Heap Sort,,Quick Sort,,Selection Sort,,Radix Sort,,Merge Sort,,Insertion Sort,,Shell Sort,,Bucket/Counting Sort,,Bubble Sort,,,,,,,,,,,,,,8
21,The best \(O(n)\) buildHeap function...,MC,,starts at index \(1\) and downHeaps until index \(n\).,,starts at index \(1\) and upHeaps until index \(n\).,,starts at index \(n\) and downHeaps until index \(1\).,,starts at index \(n\) and upHeaps until index \(1\).,,starts at index \(1\) and downHeaps until index \(\frac{n}{2}\).,,starts at index \(1\) and upHeaps until index \(\frac{n}{2}\).,,starts at index \(\frac{n}{2}\) and downHeaps until index \(1\).,,starts at index \(\frac{n}{2}\) and upHeaps until index \(1\).,,starts at index \(\frac{n}{2}\) and downHeaps until index \(n\).,,starts at index \(\frac{n}{2}\) and upHeaps until index \(n\).,,starts at index \(n\) and downHeaps until index \(\frac{n}{2}\).,,starts at index \(n\) and upHeaps until index \(\frac{n}{2}\).,,,,,,,,7
22,"It would be too much work to make a question about this, but what type of question about Dijkstra's Algorithm is very likely to show up on the exam?",MC,,Code Dijkstra's Algorithm!,,Write a 5-paragraph essay about how Dijkstra's Algorithm works,,Fill in the same table we did in lab to find the shortest path from a start vertex,,Apply Dijkstra's Algorithm to find relationships between regulation of genes in a brain connectivity map.,,,,,,,,,,,,,,,,,,,,,,,,3
23,A leaf has a height of...,MC,,-1,,0,,1,,2,,infinity,,,,,,,,,,,,,,,,,,,,,,2
24,Double hashing is when you...,MC,,store two different hash tables for the same data using different hash functions.,,"use one function, then if there's a collision, use another hash function.",,concatenate one hash table with another.,,"use linear probing until the table is full, then resort to chaining.",,,,,,,,,,,,,,,,,,,,,,,,2
25,"The hash function gets you an integer, but it's often too large to represent an array index. What do you do?",MC,,Divide by table size,,Mod by table size,,Subtract the table size,,Divide by table size and then mod it by table size,,,,,,,,,,,,,,,,,,,,,,,,2
26,Chaining CANNOT support a load factor greater than _____.,MC,,0.7,,1,,1.5,,2,,10,,There is no limit.,,,,,,,,,,,,,,,,,,,,6
27,Open addressing CANNOT support a load factor greater than _____.,MC,,0.7,,1,,1.5,,2,,10,,There is no limit.,,,,,,,,,,,,,,,,,,,,2
28,"When the load factor is low, the time complexity of accessing elements in a hash table is (generally speaking)...",MC,,\(O(1)\),,\(O(\log n)\),,\(O(n)\),,\(O(n \log n)\),,\(O(n^2)\),,,,,,,,,,,,,,,,,,,,,,1
29,"True or False: When expanding a hash table, one can simply copy over all elements to a larger sized table.",MC,,TRUE,,FALSE,,,,,,,,,,,,,,,,,,,,,,,,,,,,2
30,"You implement a hash table using linear probing. Each element is a struct containing the data being stored (key and value) and a boolean ""filled"" flag. What's missing?",MC,,Nothing!,,Pointer to start of array,,Pointer to start of linked list,,Hash value,,"Boolean ""removed"" flag",,,,,,,,,,,,,,,,,,,,,,5
