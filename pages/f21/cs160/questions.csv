Id,Question,Type,Preformatted,Image,Option 1,Image 1,Option 2,Image 2,Option 3,Image 3,Option 4,Image 4,Option 5,Image 5,Option 6,Image 6,Option 7,Image 7,Option 8,Image 8,Option 9,Image 9,Option 10,Image 10,Option 11,Image 11,Option 12,Image 12,Option 13,Image 13,Option 14,Image 14,Option 15,Image 15,Correct Answer
1,\(f(n) = o(g(n))\) iff....,MC,,,"\(\exists c, n_0 > 0\) such that \(\forall n \geq n_0\), \(f(n) \leq c g(n)\).",,"\(\exists c, n_0 > 0\) such that \(\forall n \geq n_0\), \(f(n) \geq c g(n)\).",,\(\lim\limits_{n \to \infty} \frac{f(n)}{g(n)} = 0\).,,\(\lim\limits_{n \to \infty} \frac{f(n)}{g(n)} = \infty\).,,,,,,,,,,,,,,,,,,,,,,,,3
2,What is the recurrence of the following recursion tree (only the first three levels are shown)?,MC,,Q1.PNG,\(T(n) = 3T(n\log{n})+\frac{n}{4}\),,\(T(n) = 3T(\frac{n}{4})+n \log{n}\),,\(T(n) = 4T(n \log{n})+\frac{n}{3}\),,\(T(n) = 4T(\frac{n}{3})+n \log{n}\),,,,,,,,,,,,,,,,,,,,,,,,2
3,Consider the following recurrence: \(T(n) = 3T(\frac{n}{3})+n \log{n}\). The runtime of \(T(n)\) is...,MC,,,\(\Theta(n)\),,\(\Theta(n \log{n})\),,\(\Theta(n^2 \log{n})\),,\(\Theta(n \log^2{n})\),,,,,,,,,,,,,,,,,,,,,,,,4
4,Heap sort is all of the following EXCEPT...,MC,,,in place.,,stable.,,an optimal sorting algorithm.,,a sorting algorithm using a structure that can be built in linear time.,,,,,,,,,,,,,,,,,,,,,,,,2
5,Quicksort takes \(\Theta(n^2)\) runtime in the worst case but is expected to take \(\Theta(n \log{n})\) time. What is a modification one can make to make quicksort take \(\Theta(n \log{n})\) time in the worst case?,MC,,,Always pivot around the element in the middle of the array.,,Use deterministic selection to find the median and pivot around the median.,,"Keep shuffling the array until the median is in the middle of the array, then recurse on the left and right halves.",,None of the above are viable options.,,,,,,,,,,,,,,,,,,,,,,,,2
6,"The proof of the \(\Omega(n \log{n})\) lower bound to any comparison based sorting algorithm in the worst case involves using a decision tree, where each node represents a comparison. How many leaves does this tree have?",MC,,,\(n \log{n}\),,\(n^2 \log^2{n}\),,\(n!\),,\(\log{n!}\),,,,,,,,,,,,,,,,,,,,,,,,3
7,What is the precomputed prefix array used for the KMP string matching algorithm for the pattern <code>ABCABCAC</code>?,MC,,,"<code>[1, 2, 3, 1, 2, 3, 1, 3]</code>",,"<code>[0, 0, 0, 1, 2, 3, 1, 0]</code>",,"<code>[0, 0, 0, 1, 2, 3, 4, 0]</code>",,"<code>[0, 0, 0, 1, 2, 3, 1, 3]</code>",,,,,,,,,,,,,,,,,,,,,,,,3
8,What is a potential function that can be used to show that expanding an array takes at most \(\Theta(1)\) amortized time?,MC,,,\(\Phi = num\_elems\_in\_arr\),,\(\Phi = num\_elems\_in\_second\_half\_of\_arr\),,\(\Phi = 2 * num\_elems\_in\_second\_half\_of\_arr\),,\(\Phi = num\_elems\_in\_first\_half\_of\_arr + (2 * num\_elems\_in\_second\_half\_of\_arr)\),,,,,,,,,,,,,,,,,,,,,,,,3
9,"Consider the following pseudocode for finding the <code>n</code>th number in the Fibonacci sequence. This in-place algorithm takes exponential time. A Dynamic Programming solution would improve the runtime to ___ time, but at the cost of ___ space.",MC,"// Input: n is an integer
FIBONACCI(n):
    IF n == 0 OR n == 1, return 1
    ELSE, return FIBONACCI(n-1)+FIBONACCI(n-2)",,"\(\Theta(n)\), \(\Theta(n)\)",,"\(\Theta(n)\), \(\Theta(n^2)\)",,"\(\Theta(n^2)\), \(\Theta(n)\)",,"\(\Theta(n^2)\), \(\Theta(n^2)\)",,,,,,,,,,,,,,,,,,,,,,,,1
10,An optimal binary search tree...,MC,,,is balanced.,,minimizes expected search query time.,,runs search queries in \(O(\log n)\) time in the worst case.,,All of the above,,,,,,,,,,,,,,,,,,,,,,,,2
11,Consider a red-black tree with height 3. What is the minimum number of possible nodes the tree can have?,MC,,,6,,7,,8,,15,,,,,,,,,,,,,,,,,,,,,,,,1
12,"Suppose that an implementation of a hash table uses chaining to handle collisions, but stores a red-black tree in each slot instead of a linked list. This change in implementation causes the runtime of inserting to _____ and of searching to _____.",MC,,,"increase, increase",,"increase, decrease",,"decrease, increase",,"decrease, decrease",,,,,,,,,,,,,,,,,,,,,,,,2
13,"Suppose that you want to design an augmented tree where you can insert, search, remove, and find the rank of an element in \(\Theta(\log n)\) time. What augmented information would you put in each node?",MC,,,the rank of the node's value,,a pointer to the node's successor,,the size of that node's subtree,,the maximum element in that node's subtree,,,,,,,,,,,,,,,,,,,,,,,,3
14,"Let \(n\) be the number of vertices in a graph and let \(e\) be the number of edges. For a complete graph, \(e\) equals...",MC,,,\(\Theta(1)\),,\(\Theta(n)\),,\(\Theta(n \log{n})\),,\(\Theta(n^2)\),,,,,,,,,,,,,,,,,,,,,,,,4
15,Consider the following graph. Is the subgraph containing only the vertices \(D\) and \(E\) (and the edge between them) a biconnected component?,MC,,Q3.PNG,Yes,,No,,"Debatable, but everyone would agree that it is a ""bridge""",,This is not a valid graph to begin with.,,,,,,,,,,,,,,,,,,,,,,,,3
16,Topological sort is designed for what kind of graphs?,MC,,,"Directed, acyclic graphs",,Any directed graph,,Trees,,Any connected graph,,,,,,,,,,,,,,,,,,,,,,,,1
17,Consider the following graph. Kruskal's MST algorithm would insert which edge first?,MC,,Q4.PNG,The edge between \(A\) and \(B\),,The edge between \(A\) and \(C\),,The edge between \(A\) and \(D\),,"It depends on which vertex we're designating as the ""source""",,,,,,,,,,,,,,,,,,,,,,,,2
18,"The Floyd-Warshall All Pairs Shortest Path algorithm is a Dynamic Programming solution that requires how much extra space?
<i>Let \(n\) = number of vertices and let \(e\) = number of edges</i>",MC,,,\(\Theta(e \log{n})\),,\(\Theta(e+n \log{n})\),,\(\Theta(n^3)\),,\(\Theta(n^2)\),,,,,,,,,,,,,,,,,,,,,,,,4
19,"For a fibonacci min-heap, which of the following is the only operation that takes longer than \(O(1)\) amortized time?",MC,,,Decrease Key,,Merge (merging two fibonacci heaps),,Insert,,Remove min,,,,,,,,,,,,,,,,,,,,,,,,4
20,"Because it is possible to sort integers using the convex hull problem, and all steps converting input and output between the sorting problem and the convex hull problem have a quick runtime, the convex hull problem MUST take \(\Omega(n \log{n})\) time. This lower bound is determined by a method called...",MC,,,reduction.,,decision trees.,,an adversary argument.,,NP completeness.,,,,,,,,,,,,,,,,,,,,,,,,1
